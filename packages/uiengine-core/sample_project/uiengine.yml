# Project name â€“ defaults to name from package.json, here you can overwrite it
name: UIengine sample

# Base directories for the input, your raw source files:
# - pages is the directory of the UIengine's site structure and page markdown files
# - components is the root of the directory containing the components
source:
  pages: ./pages
  components: ./components
  templates: ./templates
  includes: ./includes

# Destination paths for the generated output:
# - site is the directory where the html files for the pages will be stored
# - assets will contain the static files belonging to the theme (the sites UI)
target:
  site: ./dist
  assets: ./dist/assets

# If you want to use your own theme instead of the default one, there are two options:
# - provide the path to a directory inside this project that contains the theme
#   (case: you use the theme just for this project)
# - give the name of the npm package that is the theme
#   (case: you use the theme more than once and want to share it across projects)
#
# UIengine will `require` the theme, which has to provide a defined set of functions for
# setup and rendering. For details see the theme docs in the README.
theme: ./theme
