extends layout.pug

include /contentheader/contentheader.pug
include /preview/preview.pug

block main
  - const navigationItem = navigation[navigationId]
  - const page = pages[navigationItem.itemId]
  - const schema = page.schema
  - const pageId = h.dasherize(page.id)
  - const sectionInfoId = `${pageId}-info`
  - const sectionSchemaId = `${pageId}-schema`
  - const actionlistId = `${pageId}-actionlist`
  - const sectionActiveClass = 'contentsection--active'
  - const hasSchema = schema && Object.keys(schema).length
  - const hasInfo = !!page.content
  - const previewPath = h.pagePreviewPath(page.path, page.template)

  section.page(id=pageId)
    +contentheader().sob-m
      h1.contentheader__title= page.title
      if hasInfo && hasSchema
        .contentheader__options
          +contentheaderOption(sectionInfoId, h.t('template.info'), true)
          +contentheaderOption(sectionSchemaId, h.t('template.schema'), false)

      .contentheader__actions
        button.contentheader__actiontoggle(type="button" data-actionlist-target=actionlistId)
          +icon('tools')
        ul.contentheader__actionlist(id=actionlistId)
          li.contentheader__action
            a.contentheader__actionlink(href=previewPath target=pageId)
              +icon('open-in-window')
              = h.t('template.open_in_window')

    if hasInfo || hasSchema
      .sot-xs
        if hasInfo
          - const classes = sectionActiveClass
          .contentsection(id=sectionInfoId class=classes)
            .content
              !=page.content

        if hasSchema
          - const classes = !hasInfo ? sectionActiveClass : null
          .contentsection(id=sectionSchemaId class=classes)
            .content
              each item, id in schema
                +schema(id, item).sob-xl

    .sot-xl
      +preview(pageId, previewPath)
